food_api_homepage:
    path:  /
    defaults: { _controller: FoodApiBundle:Default:index }


#Restaurant routings
food_api_restaurants:
    path: /restaurants
    defaults: { _controller: FoodApiBundle:Restaurants:getRestaurants }
    methods: [GET]

food_api_restaurants_filtered:
    path: /restaurants/filters
    defaults: { _controller: FoodApiBundle:Restaurants:getRestaurantsFiltered }
    methods: [GET]

food_api_restaurants_get:
    path: /restaurants/{id}
    defaults: { _controller: FoodApiBundle:Restaurants:getRestaurant}
    methods: [GET]


food_api_restaurants_get_menu:
    path: /restaurants/{id}/menu
    defaults: { _controller: FoodApiBundle:Restaurants:getMenu }
    methods: [GET]

food_api_restaurants_get_menu_categories:
    path: /restaurants/{id}/menu/categories
    defaults: { _controller: FoodApiBundle:Restaurants:getMenuCategories }
    methods: [GET]

food_api_restaurants_get_menu_item:
    path: /restaurants/{placeId}/menu/{menuItem}
    defaults: { _controller: FoodApiBundle:Restaurants:getMenuItem }
    methods: [GET]



#basketszzzz
food_api_baskets_create:
    path: /baskets
    defaults: { _controller: FoodApiBundle:Basket:createBasket }
    methods: [POST]

food_api_basket_update:
    path: /baskets/{id}
    defaults: { _controller: FoodApiBundle:Basket:updateBasket }
    methods: [PUT]

food_api_baskets_get:
    path: /baskets/{id}
    defaults: { _controller: FoodApiBundle:Basket:getBasket }
    methods: [GET]

food_api_baskets_delete:
    path: /baskets/{id}
    defaults: { _controller: FoodApiBundle:Basket:deleteBasket }
    methods: [DELETE]

food_api_baskets_update_item:
    path: /baskets/{id}/{basket_item_id}
    defaults: { _controller: FoodApiBundle:Basket:updateBasketItem }
    methods: [PUT]


food_api_baskets_delete_item:
    path: /baskets/{id}/{basket_item_id}
    defaults: { _controller: FoodApiBundle:Basket:deleteBasketItem }
    methods: [DELETE]



# Orders Routings :)
food_api_orders:
    path: /orders
    defaults: { _controller: FoodApiBundle:Orders:getOrders}
    methods: [GET]

food_api_order_create:
    path: /orders
    defaults: { _controller: FoodApiBundle:Orders:createOrder}
    methods: [POST]

food_api_order_create_wcon:
    path: /orders2
    defaults: { _controller: FoodApiBundle:Orders:createOrderPre}
    methods: [POST]

food_api_order_details:
    path: /orders/{id}
    defaults: { _controller: FoodApiBundle:Orders:getOrderDetails }
    methods: [GET]

food_api_order_by_hash_get:
    path: /ordersByHash/{hash}
    defaults: { _controller: FoodApiBundle:Orders:getOrderDetailsByHash }
    methods: [GET]
food_api_order_by_hash_update:
    path: /ordersByHash/{hash}
    defaults: { _controller: FoodApiBundle:Orders:updateOrderByHash }
    methods: [PUT,PATCH,OPTIONS]

food_api_placepont_orders_by_hash:
    path: /ordersByPlacepointHash/{hash}
    defaults: { _controller: FoodApiBundle:Orders:getOrdersByPlacepointHash }
    methods: [GET]

food_api_order_details2:
    path: /orders2/{id}
    defaults: { _controller: FoodApiBundle:Orders:getOrderDetails }
    methods: [GET]

food_api_order_confirm:
    path: /orders/{id}
    defaults: { _controller: FoodApiBundle:Orders:confirmOrder }
    methods: [POST]

food_api_order_confirm2:
    path: /orders2/{id}
    defaults: { _controller: FoodApiBundle:Orders:confirmOrder }
    methods: [POST]

food_api_order_status:
    path: /orders/{id}/status
    defaults: { _controller: FoodApiBundle:Orders:getOrderStatus}
    methods: [GET]

food_api_order_status2:
    path: /orders2/{id}/status
    defaults: { _controller: FoodApiBundle:Orders:getOrderStatus}
    methods: [GET]

food_api_coupons_v1:
    path: /coupons
    defaults: { _controller: FoodApiBundle:Orders:getCoupon}
    methods: [POST]

food_api_find_address:
    path: /address
    defaults: { _controller: FoodApiBundle:Address:findAddress}
    methods: [GET]

food_api_find_street:
    path: /address/street
    defaults: { _controller: FoodApiBundle:Address:findStreet}
    methods: [GET]

# Users part
food_api_users_register:
    path: /users
    defaults: { _controller: FoodApiBundle:Users:register}
    methods: [POST]

food_api_users_register2:
    path: /users2
    defaults: { _controller: FoodApiBundle:Users:register2}
    methods: [POST]

food_api_users_reset_password:
    path: /users/reset_password
    defaults: { _controller: FoodApiBundle:Users:resetPassword}
    methods: [POST]

food_api_users_update:
    path: /users
    defaults: { _controller: FoodApiBundle:Users:update}
    methods: [PUT]

food_api_users_login:
    path: /users/login
    defaults: { _controller: FoodApiBundle:Users:login}
    methods: [POST]

food_api_users_change_password:
    path: /users/change_password
    defaults: { _controller: FoodApiBundle:Users:changePassword}
    methods: [POST]

food_api_users_information:
    path: /users/me
    defaults: { _controller: FoodApiBundle:Users:me}
    methods: [GET]

food_api_logout:
    path: /users/session
    defaults: { _controller: FoodApiBundle:Users:logout}
    methods: [DELETE]

# for dispatcher only
food_api_logout_user:
    path: /users/logout
    defaults: { _controller: FoodApiBundle:Users:logoutUser}
    methods: [POST]

food_api_users_get_list:
    path: /users/list/{itemsPerPage}/{pageNo}
    defaults: { _controller: FoodApiBundle:Users:usersList }
    methods: [GET]

# Images and stuff
food_api_get_image:
    path: /images/
    defaults: { _controller: FoodApiBundle:Images:image}
    methods: [GET]

# Best Offers
food_api_best_offers_all:
    path: /offers/
    defaults: { _controller: FoodApiBundle:Offers:get}
    methods: [GET]

food_api_best_offers:
    path: /offers/{city}
    defaults: { _controller: FoodApiBundle:Offers:get}
    methods: [GET]

food_api_get_static_content:
    path: /staticcontent/{id}
    defaults: { _controller: FoodApiBundle:StaticContent:process}
    methods: [GET]

food_api_get_show_popup:
    path: /showRating
    defaults: { _controller: FoodApiBundle:Params:showRating}
    methods: [GET]

food_api_driver_information:
    path: /driver/me/{token}
    defaults: { _controller: FoodApiBundle:Driver:me}
    methods: [GET]

food_api_driver_information_by_id:
    path: /driver/meId/{id}
    defaults: { _controller: FoodApiBundle:Driver:meId}
    methods: [GET]

food_api_driver_assign_to_order:
    path: /driver/assignToOrder/{driverId}/{orderId}
    defaults: { _controller: FoodApiBundle:Driver:assignToOrder}
    methods: [GET]

food_api_driver_picked_order:
    path: /driver/picked/{orderId}
    defaults: { _controller: FoodApiBundle:Driver:picked}
    methods: [GET]

food_api_driver_completed_order:
    path: /driver/completed/{orderId}
    defaults: { _controller: FoodApiBundle:Driver:completed}
    methods: [GET]

food_api_driver_working_state_order:
    path: /driver/workingState/{id}/{state}
    defaults: { _controller: FoodApiBundle:Driver:workingState}
    methods: [GET]

food_api_global_parameters:
    path: /global-parameters/{appType}
    defaults: { _controller: FoodApiBundle:Default:getGlobalParameters }
    methods: [GET]

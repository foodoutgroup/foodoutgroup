food_lang_homepage:
    pattern: /
    defaults: { _controller: FoodAppBundle:Default:index }

food_test_payment:
    pattern:  /test/payment
    defaults: { _controller: FoodAppBundle:Test:payment }

food_test_report:
    pattern:  /test/report
    defaults: { _controller: FoodAppBundle:Test:report }

food_test_index:
    pattern:  /test/
    defaults: { _controller: FoodAppBundle:Test:index }

food_test:
    pattern:  /test/mssql
    defaults: { _controller: FoodAppBundle:Test:mssql }

food_migrator:
    pattern: /test/migrate-cili
    defaults: { _controller: FoodAppBundle:Test:migrateCili }

food_putorder:
    pattern:  /test/put-order
    defaults: { _controller: FoodAppBundle:Test:putOrder }

food_test_pdf:
    pattern:  /test/pdf
    defaults: { _controller: FoodAppBundle:Test:pdf }

food_test_invoice:
    pattern:  /test/invoice
    defaults: { _controller: FoodAppBundle:Test:invoice }

food_nav_test1:
    pattern: /test/nav/test1
    defaults: { _controller: FoodAppBundle:Test:nav1 }

food_nav_list:
    pattern: /test/nav/list
    defaults: { _controller: FoodAppBundle:Test:listOrders }


food_review_create:
    pattern: /place/review/{id}
    defaults: { _controller: FoodDishesBundle:Place:reviewCreate }
    requirements:
        _method: POST

food_slug:
    pattern:  /{slug}/
    defaults: { _controller: FoodAppBundle:Slug:process, slug: ~ }
    requirements:
        slug : "^(?!admin|cart|test|invoice|payments|call_center|newsletter|ajax|js|places|vietos|mesto|monitoring|nagios|banned|logistics|order).+"

food_order_nav_test1:
    pattern: /order/nav_test1
    defaults: { _controller: FoodOrderBundle:Default:testNav1 }

food_order_nav_test2:
    pattern: /order/nav_test2
    defaults: { _controller: FoodOrderBundle:Default:testNav2 }

food_order_nav_post:
    pattern: /order/post/{id}
    defaults: { _controller: FoodOrderBundle:Default:postToNav }

food_order_nav_update_prices:
    pattern: /order/update_prices/{id}
    defaults: { _controller: FoodOrderBundle:Default:updatePricesNav }


food_admin_get_place_categories:
    pattern: /admin/place/get-categories/{placeId}
    defaults: {_controller: FoodDishesBundle:DishAdmin:getCategoryOptionsFromPlace}
    options:
        expose: true

food_admin_get_place_dish_options:
    pattern: /admin/place/get-dish-options/{placeId}/{uniqueId}
    defaults: {_controller: FoodDishesBundle:DishAdmin:getDishOptionsFromPlace}
    options:
        expose: true

food_admin_get_order_status_popup:
    pattern: /admin/dispatcher/get_order_status_popup/{orderId}
    defaults: {_controller: FoodAppBundle:DispatcherAdmin:statusPopup}
    options:
        expose: true

food_admin_set_order_status:
    pattern: /admin/dispatcher/set-order-status/{orderId}/{status}
    defaults: {_controller: FoodAppBundle:DispatcherAdmin:setOrderStatus}
    options:
        expose: true

food_admin_get_driver_list:
    pattern: /admin/dispatcher/get-driver-list/{orders}
    defaults: {_controller: FoodAppBundle:DispatcherAdmin:getDriverList}
    options:
        expose: true

food_admin_assign_driver:
    pattern: /admin/dispatcher/assign-driver/
    defaults: {_controller: FoodAppBundle:DispatcherAdmin:assignDriver}
    options:
        expose: true
    requirements:
          _method:  POST

food_admin_check_new_orders:
    pattern: /admin/dispatcher/check-new-orders/
    defaults: {_controller: FoodAppBundle:DispatcherAdmin:checkNewOrders}
    options:
        expose: true
    requirements:
          _method:  GET

food_admin_get_place_unit_categories:
    pattern: /admin/place/get-unit-categories/{placeId}
    defaults: {_controller: FoodDishesBundle:DishUnitAdmin:getUnitCategoryOptionsFromPlace}
    options:
        expose: true

fos_js_routing:
    resource: "@FOSJsRoutingBundle/Resources/config/routing/routing.xml"

food_admin:
    resource: '@SonataAdminBundle/Resources/config/routing/sonata_admin.xml'
    prefix: /admin

food_cart:
    resource: "@FoodCartBundle/Resources/config/routing.yml"
    prefix:   /cart

food_ajax_dish:
    pattern: /ajax/dish/{dish}
    defaults: { _controller: FoodDishesBundle:Dish:getDish, dish: ~}

food_ajax_edit_dish:
    pattern: /ajax/edit-dish-in-cart/{dish}/{cartId}
    defaults: { _controller: FoodDishesBundle:Dish:editDishInCart, dish: ~, cartId: ~}

food_ajax_remove_dish:
    pattern: /ajax/remove-dish-in-cart/{dish}/{cartId}/{inCart}
    defaults: { _controller: FoodDishesBundle:Dish:removeDishInCart, dish: ~, cartId: ~, inCart: 0}

food_ajax:
    pattern: /ajax/{action}/
    defaults: { _controller: FoodAppBundle:Ajax:ajax, action: ~}
    options:
        expose: true


food_place_en:
    resource: "@FoodPlacesBundle/Resources/config/routing_en.yml"
    prefix:   /places

food_place_lt:
    resource: "@FoodPlacesBundle/Resources/config/routing_lt.yml"
    prefix:   /vietos

food_place_ru:
    resource: "@FoodPlacesBundle/Resources/config/routing_ru.yml"
    prefix:   /mesto


food_places_filter:
    pattern: /places/filter/
    defaults: { _controller: FoodPlacesBundle:Default:list }


static:
    path:     /static/{id}
    defaults: { _controller: FoodAppBundle:Static:index }
    methods:  [GET]

food_place_point_data:
    pattern: /ajax/place-point/{point_id}
    defaults: { _controller: FoodDishesBundle:Place:placePoint, point_id: ~}

food_place_menu_layout:
    pattern: /ajax/save-menu-layout/{layout}
    defaults: { _controller: FoodDishesBundle:FoodCategory:restaurantMenuLayout, layout: ~}

food_newsletter_subscribe:
    pattern: /newsletter/subscribe/
    defaults: { _controller: FoodAppBundle:Default:newsletterSubscribe}
    requirements:
      _method:  POST

food_newsletter_thank:
    pattern: /newsletter/thank/
    defaults: { _controller: FoodAppBundle:Default:newsletterThank}

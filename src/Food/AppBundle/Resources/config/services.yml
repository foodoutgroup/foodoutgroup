services:
    food.app.utils.language:
        class: Food\AppBundle\Utils\Language
        calls:
            - [container, [@service_container]]
        arguments: [@service_container]

    food.app.utils.notifications:
        class: Food\AppBundle\Utils\Notifications
        calls:
            - [container, [@service_container]]

    food.app.utils.misc:
        class: Food\AppBundle\Utils\Misc
        calls:
            - [container, [@service_container]]

    food.app.utils.route:
        class: Food\AppBundle\Utils\Route
        calls:
            - [container, [@service_container]]

    food.static:
        class: Food\AppBundle\Service\StaticService
        arguments: [@service_container, user_id]

    food.newsletter:
        class: Food\AppBundle\Service\NewsletterService
        arguments: [@service_container]

    food.arcgis:
        class: Food\AppBundle\Service\ArcGisService
        calls:
            - [setContainer, [@service_container]]

    food.googlegis:
        class: Food\AppBundle\Service\GoogleGisService
        calls:
            - [setContainer, [@service_container]]

    food.location:
        class: Food\AppBundle\Service\LocationService
        calls:
            - [setContainer, [@service_container]]

    food.mail:
        class: Food\AppBundle\Service\MailService
        calls:
           - [setContainer, [@service_container]]

    food.mailer:
        class: Food\AppBundle\Service\MailerService
        arguments: ['@service_container', %mailer_provider%]

    food.newsletter_mailer:
        class: Food\AppBundle\Service\MailerService
        arguments: ['@service_container', %mailer_newsletter_provider%]

    food.mail.mailerlite:
        class: Food\AppBundle\Service\Mail\MailerliteService
        arguments: [%mailerlite_api_key%]
        calls:
            - [setContainer, [@service_container]]
            - [setFromEmail, [%mailer_from%]]
            - [setFromName, [%title%]]

    food.mail.mailer:
        class: Food\AppBundle\Service\Mail\MailerMessagesService
        arguments: [%mailer_api_key%]

    food.mail.sendigo:
        class: Food\AppBundle\Service\Mail\SendigoService
        arguments: [%mailer_api_key%]
        calls:
            - [setContainer, [@service_container]]
            - [setFromEmail, [%mailer_from%]]
            - [setFromName, [%title%]]

    food.simple_mailer:
        class: Food\AppBundle\Service\SimpleMailerService
        calls:
            - [setMailer, [@mailer]]
            - [setTransport, [@swiftmailer.transport.real]]

    food.reset_password:
        class: Food\AppBundle\Utils\ResetPassword
        calls:
            - [setContainer, [@service_container]]

    food.google_analytics:
        class: Food\AppBundle\Service\GoogleAnalyticsService
        calls:
            - [setServiceAccountName, ["%google.analytics.service_account_name%"]]
            - [setPrivateKey, ["%google.analytics.base64_private_key%"]]
            - [setScopes, ["%google.analytics.scopes%"]]
            - [setViewId, ["%google.analytics.view_id%"]]

    food.base_service:
      class: Food\AppBundle\Service\BaseService
      arguments:
        - @doctrine.orm.entity_manager

    food.driver_service:
      class: Food\AppBundle\Service\DriverService
      parent: food.base_service

    food.city_service:
        class: Food\AppBundle\Service\CityService
        parent: food.base_service
        arguments:
          - @router
          - @food.app.utils.language
        calls:
          - [setAvailableCitiesSlugs, [%available_cities_slugs%]]
          - [setLocale, [%locale%]]

    food.zavalas_service:
      class: Food\AppBundle\Service\ZavalasService
      parent: food.base_service
      arguments:
        - @food.app.utils.misc
        - @translator.default
        - @food.location
        - @food.places

    sonata.admin.cities:
      class: Food\AppBundle\Admin\CityAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: "Content", label: "admin.cities" }
      arguments:
        - ~
        - Food\AppBundle\Entity\City
        - ~
      calls:
        - [ setTranslationDomain, [SonataAdminBundle]]

    sonata.admin.citieslog:
      class: Food\AppBundle\Admin\CityLogAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: "Content", label: "admin.citieslog" }
      arguments:
        - ~
        - Food\AppBundle\Entity\CityLog
        - ~
      calls:
        - [ setTranslationDomain, [SonataAdminBundle]]

    sonata.admin.banned_email:
      class: Food\AppBundle\Admin\BannedEmailAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: "Content", label: "admin.banned_email" }
      arguments:
        - ~
        - Food\AppBundle\Entity\BannedEmail
        - ~
      calls:
        - [ setTranslationDomain, [SonataAdminBundle]]

    sonata.admin.call_log:
      class: Food\AppBundle\Admin\CallLogAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: "Content", label: "admin.call_log" }
      arguments:
        - ~
        - Food\AppBundle\Entity\CallLog
        - ~
      calls:
        - [ setTranslationDomain, [SonataAdminBundle]]

    food.dispatcher_service:
      class: Food\AppBundle\Service\DispatcherService
      parent: food.base_service
      calls:
        - [ setSecurityContext, [@security.context]]

    sonata.admin.error_log:
      class: Food\AppBundle\Admin\ErrorLogAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, group: "Content", label: "admin.error_log" }
      arguments:
        - ~
        - Food\AppBundle\Entity\ErrorLog
        - ~
      calls:
        - [ setTranslationDomain, [SonataAdminBundle]]

    food.error_log_service:
      class: Food\AppBundle\Service\ErrorLogService
      parent: food.base_service
      calls:
        - [setContainer, [@service_container]]
            class: Food\AppBundle\Service\ErrorLogService
            parent: food.base_service

    food.phones_code_service:
                class: Food\AppBundle\Service\RestCountryService
                parent: food.base_service

    sonata.admin.country_phone:
          class: Food\AppBundle\Admin\PhoneCodesAdmin
          tags:
            - { name: sonata.admin, manager_type: orm, group: "Content", label: "admin.phone_codes" }
          arguments:
            - ~
            - Food\AppBundle\Entity\PhoneCodes
            - ~
          calls:
            - [ setTranslationDomain, [SonataAdminBundle]]

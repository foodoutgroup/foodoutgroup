security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_MODERATOR:   ROLE_USER, ROLE_SONATA_ADMIN
        ROLE_ADMIN:       ROLE_MODERATOR
        ROLE_SUPER_ADMIN: ROLE_SONATA_ADMIN
        ROLE_SUPPORT:     ROLE_USER, ROLE_SONATA_ADMIN
        ROLE_DISPATCHER:  ROLE_USER, ROLE_SONATA_ADMIN
#        SONATA:
#          - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT

    providers:
        fos_userbundle:
           id: fos_user.user_provider.username_email

    firewalls:
      admin:
          pattern:      /admin(.*)
          form_login:
              default_target_path: sonata_admin_dashboard
              provider:       fos_userbundle
              csrf_provider:  form.csrf_provider
              login_path:     sonata_user_admin_security_login
              use_forward:    false
              check_path:     sonata_user_admin_security_check
              failure_path:   null
          logout:
              path:           sonata_user_admin_security_logout
              target:         sonata_user_admin_security_login

          anonymous:    true
      # -> end custom configuration

      # defaut login area for standard users
      main:
          pattern: ^/
          form_login:
              provider:       fos_userbundle
              login_path:     fos_user_security_login
              use_forward:    false
              check_path:     fos_user_security_check
              failure_path:   null
              failure_handler: food_user.authentication_handler
              success_handler: food_user.authentication_handler
          remember_me:
              key:      "%secret%"
              lifetime: 31536000 # 365 days in seconds
              path:     /
              domain:   ~ # Defaults to the current domain from $_SERVER
          logout:
              path: fos_user_security_logout
              target: /
              success_handler: authentication_handler
          anonymous:    true

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users

        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # -> custom access control for the admin area of the URL
        - { path: ^/admin/[a-z][a-z]/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/[a-z][a-z]/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/[a-z][a-z]/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # -> end

        - { path: ^[a-z][a-z]/user/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^[a-z][a-z]/user/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/admin/[a-z][a-z]/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN, ROLE_MODERATOR, ROLE_SUPPORT, ROLE_DISPATCHER, ROLE_MARKETING, ROLE_EDITOR] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

